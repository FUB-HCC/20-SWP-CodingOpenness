{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { findDOMNode } from \"react-dom\";\nimport { AbstractPureComponent2, Classes, Keys } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { safeInvoke } from \"../../common/utils\";\nimport { Portal } from \"../portal/portal\";\n\nvar Overlay =\n/** @class */\nfunction (_super) {\n  __extends(Overlay, _super);\n\n  function Overlay(props, context) {\n    var _this = _super.call(this, props, context) || this;\n\n    _this.refHandlers = {\n      container: function (ref) {\n        return _this.containerElement = findDOMNode(ref);\n      }\n    };\n\n    _this.maybeRenderChild = function (child) {\n      if (child == null) {\n        return null;\n      } // add a special class to each child element that will automatically set the appropriate\n      // CSS position mode under the hood. also, make the container focusable so we can\n      // trap focus inside it (via `enforceFocus`).\n\n\n      var decoratedChild = typeof child === \"object\" ? React.cloneElement(child, {\n        className: classNames(child.props.className, Classes.OVERLAY_CONTENT),\n        tabIndex: 0\n      }) : React.createElement(\"span\", {\n        className: Classes.OVERLAY_CONTENT\n      }, child);\n      var _a = _this.props,\n          onOpening = _a.onOpening,\n          onOpened = _a.onOpened,\n          onClosing = _a.onClosing,\n          onClosed = _a.onClosed,\n          transitionDuration = _a.transitionDuration,\n          transitionName = _a.transitionName;\n      return React.createElement(CSSTransition, {\n        classNames: transitionName,\n        onEntering: onOpening,\n        onEntered: onOpened,\n        onExiting: onClosing,\n        onExited: onClosed,\n        timeout: transitionDuration\n      }, decoratedChild);\n    };\n\n    _this.handleBackdropMouseDown = function (e) {\n      var _a = _this.props,\n          backdropProps = _a.backdropProps,\n          canOutsideClickClose = _a.canOutsideClickClose,\n          enforceFocus = _a.enforceFocus,\n          onClose = _a.onClose;\n\n      if (canOutsideClickClose) {\n        safeInvoke(onClose, e);\n      }\n\n      if (enforceFocus) {\n        // make sure document.activeElement is updated before bringing the focus back\n        _this.bringFocusInsideOverlay();\n      }\n\n      safeInvoke(backdropProps.onMouseDown, e);\n    };\n\n    _this.handleDocumentClick = function (e) {\n      var _a = _this.props,\n          canOutsideClickClose = _a.canOutsideClickClose,\n          isOpen = _a.isOpen,\n          onClose = _a.onClose;\n      var eventTarget = e.target;\n      var stackIndex = Overlay_1.openStack.indexOf(_this);\n      var isClickInThisOverlayOrDescendant = Overlay_1.openStack.slice(stackIndex).some(function (_a) {\n        var elem = _a.containerElement; // `elem` is the container of backdrop & content, so clicking on that container\n        // should not count as being \"inside\" the overlay.\n\n        return elem && elem.contains(eventTarget) && !elem.isSameNode(eventTarget);\n      });\n\n      if (isOpen && canOutsideClickClose && !isClickInThisOverlayOrDescendant) {\n        // casting to any because this is a native event\n        safeInvoke(onClose, e);\n      }\n    };\n\n    _this.handleDocumentFocus = function (e) {\n      if (_this.props.enforceFocus && _this.containerElement != null && e.target instanceof Node && !_this.containerElement.contains(e.target)) {\n        // prevent default focus behavior (sometimes auto-scrolls the page)\n        e.preventDefault();\n        e.stopImmediatePropagation();\n\n        _this.bringFocusInsideOverlay();\n      }\n    };\n\n    _this.handleKeyDown = function (e) {\n      var _a = _this.props,\n          canEscapeKeyClose = _a.canEscapeKeyClose,\n          onClose = _a.onClose;\n\n      if (e.which === Keys.ESCAPE && canEscapeKeyClose) {\n        safeInvoke(onClose, e); // prevent browser-specific escape key behavior (Safari exits fullscreen)\n\n        e.preventDefault();\n      }\n    };\n\n    _this.state = {\n      hasEverOpened: props.isOpen\n    };\n    return _this;\n  }\n\n  Overlay_1 = Overlay;\n\n  Overlay.getDerivedStateFromProps = function (_a) {\n    var hasEverOpened = _a.isOpen;\n\n    if (hasEverOpened) {\n      return {\n        hasEverOpened: hasEverOpened\n      };\n    }\n\n    return null;\n  };\n\n  Overlay.prototype.render = function () {\n    var _a; // oh snap! no reason to render anything at all if we're being truly lazy\n\n\n    if (this.props.lazy && !this.state.hasEverOpened) {\n      return null;\n    }\n\n    var _b = this.props,\n        children = _b.children,\n        className = _b.className,\n        usePortal = _b.usePortal,\n        isOpen = _b.isOpen; // TransitionGroup types require single array of children; does not support nested arrays.\n    // So we must collapse backdrop and children into one array, and every item must be wrapped in a\n    // Transition element (no ReactText allowed).\n\n    var childrenWithTransitions = isOpen ? React.Children.map(children, this.maybeRenderChild) : [];\n    childrenWithTransitions.unshift(this.maybeRenderBackdrop());\n    var containerClasses = classNames(Classes.OVERLAY, (_a = {}, _a[Classes.OVERLAY_OPEN] = isOpen, _a[Classes.OVERLAY_INLINE] = !usePortal, _a), className);\n    var transitionGroup = React.createElement(TransitionGroup, {\n      appear: true,\n      className: containerClasses,\n      component: \"div\",\n      onKeyDown: this.handleKeyDown,\n      ref: this.refHandlers.container\n    }, childrenWithTransitions);\n\n    if (usePortal) {\n      return React.createElement(Portal, {\n        className: this.props.portalClassName,\n        container: this.props.portalContainer\n      }, transitionGroup);\n    } else {\n      return transitionGroup;\n    }\n  };\n\n  Overlay.prototype.componentDidMount = function () {\n    if (this.props.isOpen) {\n      this.overlayWillOpen();\n    }\n  };\n\n  Overlay.prototype.componentDidUpdate = function (prevProps) {\n    if (prevProps.isOpen && !this.props.isOpen) {\n      this.overlayWillClose();\n    } else if (!prevProps.isOpen && this.props.isOpen) {\n      this.overlayWillOpen();\n    }\n  };\n\n  Overlay.prototype.componentWillUnmount = function () {\n    this.overlayWillClose();\n  };\n  /**\n   * @public for testing\n   * @internal\n   */\n\n\n  Overlay.prototype.bringFocusInsideOverlay = function () {\n    var _this = this; // always delay focus manipulation to just before repaint to prevent scroll jumping\n\n\n    return requestAnimationFrame(function () {\n      // container ref may be undefined between component mounting and Portal rendering\n      // activeElement may be undefined in some rare cases in IE\n      if (_this.containerElement == null || document.activeElement == null || !_this.props.isOpen) {\n        return;\n      }\n\n      var isFocusOutsideModal = !_this.containerElement.contains(document.activeElement);\n\n      if (isFocusOutsideModal) {\n        // element marked autofocus has higher priority than the other clowns\n        var autofocusElement = _this.containerElement.querySelector(\"[autofocus]\");\n\n        var wrapperElement = _this.containerElement.querySelector(\"[tabindex]\");\n\n        if (autofocusElement != null) {\n          autofocusElement.focus();\n        } else if (wrapperElement != null) {\n          wrapperElement.focus();\n        }\n      }\n    });\n  };\n\n  Overlay.prototype.maybeRenderBackdrop = function () {\n    var _a = this.props,\n        backdropClassName = _a.backdropClassName,\n        backdropProps = _a.backdropProps,\n        hasBackdrop = _a.hasBackdrop,\n        isOpen = _a.isOpen,\n        transitionDuration = _a.transitionDuration,\n        transitionName = _a.transitionName;\n\n    if (hasBackdrop && isOpen) {\n      return React.createElement(CSSTransition, {\n        classNames: transitionName,\n        key: \"__backdrop\",\n        timeout: transitionDuration\n      }, React.createElement(\"div\", __assign({}, backdropProps, {\n        className: classNames(Classes.OVERLAY_BACKDROP, backdropClassName, backdropProps.className),\n        onMouseDown: this.handleBackdropMouseDown,\n        tabIndex: this.props.canOutsideClickClose ? 0 : null\n      })));\n    } else {\n      return null;\n    }\n  };\n\n  Overlay.prototype.overlayWillClose = function () {\n    document.removeEventListener(\"focus\", this.handleDocumentFocus,\n    /* useCapture */\n    true);\n    document.removeEventListener(\"mousedown\", this.handleDocumentClick);\n    var openStack = Overlay_1.openStack;\n    var stackIndex = openStack.indexOf(this);\n\n    if (stackIndex !== -1) {\n      openStack.splice(stackIndex, 1);\n\n      if (openStack.length > 0) {\n        var lastOpenedOverlay = Overlay_1.getLastOpened();\n\n        if (lastOpenedOverlay.props.enforceFocus) {\n          document.addEventListener(\"focus\", lastOpenedOverlay.handleDocumentFocus,\n          /* useCapture */\n          true);\n        }\n      }\n\n      if (openStack.filter(function (o) {\n        return o.props.usePortal && o.props.hasBackdrop;\n      }).length === 0) {\n        document.body.classList.remove(Classes.OVERLAY_OPEN);\n      }\n    }\n  };\n\n  Overlay.prototype.overlayWillOpen = function () {\n    var openStack = Overlay_1.openStack;\n\n    if (openStack.length > 0) {\n      document.removeEventListener(\"focus\", Overlay_1.getLastOpened().handleDocumentFocus,\n      /* useCapture */\n      true);\n    }\n\n    openStack.push(this);\n\n    if (this.props.autoFocus) {\n      this.bringFocusInsideOverlay();\n    }\n\n    if (this.props.enforceFocus) {\n      document.addEventListener(\"focus\", this.handleDocumentFocus,\n      /* useCapture */\n      true);\n    }\n\n    if (this.props.canOutsideClickClose && !this.props.hasBackdrop) {\n      document.addEventListener(\"mousedown\", this.handleDocumentClick);\n    }\n\n    if (this.props.hasBackdrop && this.props.usePortal) {\n      // add a class to the body to prevent scrolling of content below the overlay\n      document.body.classList.add(Classes.OVERLAY_OPEN);\n    }\n  };\n\n  var Overlay_1;\n  Overlay.displayName = DISPLAYNAME_PREFIX + \".Overlay\";\n  Overlay.defaultProps = {\n    autoFocus: true,\n    backdropProps: {},\n    canEscapeKeyClose: true,\n    canOutsideClickClose: true,\n    enforceFocus: true,\n    hasBackdrop: true,\n    isOpen: false,\n    lazy: true,\n    transitionDuration: 300,\n    transitionName: Classes.OVERLAY,\n    usePortal: true\n  };\n  Overlay.openStack = [];\n\n  Overlay.getLastOpened = function () {\n    return Overlay_1.openStack[Overlay_1.openStack.length - 1];\n  };\n\n  Overlay = Overlay_1 = __decorate([polyfill], Overlay);\n  return Overlay;\n}(AbstractPureComponent2);\n\nexport { Overlay };","map":{"version":3,"sources":["../../../../src/components/overlay/overlay.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { findDOMNode } from \"react-dom\";\nimport { AbstractPureComponent2, Classes, Keys } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { safeInvoke } from \"../../common/utils\";\nimport { Portal } from \"../portal/portal\";\nvar Overlay = /** @class */ (function (_super) {\n    __extends(Overlay, _super);\n    function Overlay(props, context) {\n        var _this = _super.call(this, props, context) || this;\n        _this.refHandlers = {\n            container: function (ref) { return (_this.containerElement = findDOMNode(ref)); },\n        };\n        _this.maybeRenderChild = function (child) {\n            if (child == null) {\n                return null;\n            }\n            // add a special class to each child element that will automatically set the appropriate\n            // CSS position mode under the hood. also, make the container focusable so we can\n            // trap focus inside it (via `enforceFocus`).\n            var decoratedChild = typeof child === \"object\" ? (React.cloneElement(child, {\n                className: classNames(child.props.className, Classes.OVERLAY_CONTENT),\n                tabIndex: 0,\n            })) : (React.createElement(\"span\", { className: Classes.OVERLAY_CONTENT }, child));\n            var _a = _this.props, onOpening = _a.onOpening, onOpened = _a.onOpened, onClosing = _a.onClosing, onClosed = _a.onClosed, transitionDuration = _a.transitionDuration, transitionName = _a.transitionName;\n            return (React.createElement(CSSTransition, { classNames: transitionName, onEntering: onOpening, onEntered: onOpened, onExiting: onClosing, onExited: onClosed, timeout: transitionDuration }, decoratedChild));\n        };\n        _this.handleBackdropMouseDown = function (e) {\n            var _a = _this.props, backdropProps = _a.backdropProps, canOutsideClickClose = _a.canOutsideClickClose, enforceFocus = _a.enforceFocus, onClose = _a.onClose;\n            if (canOutsideClickClose) {\n                safeInvoke(onClose, e);\n            }\n            if (enforceFocus) {\n                // make sure document.activeElement is updated before bringing the focus back\n                _this.bringFocusInsideOverlay();\n            }\n            safeInvoke(backdropProps.onMouseDown, e);\n        };\n        _this.handleDocumentClick = function (e) {\n            var _a = _this.props, canOutsideClickClose = _a.canOutsideClickClose, isOpen = _a.isOpen, onClose = _a.onClose;\n            var eventTarget = e.target;\n            var stackIndex = Overlay_1.openStack.indexOf(_this);\n            var isClickInThisOverlayOrDescendant = Overlay_1.openStack\n                .slice(stackIndex)\n                .some(function (_a) {\n                var elem = _a.containerElement;\n                // `elem` is the container of backdrop & content, so clicking on that container\n                // should not count as being \"inside\" the overlay.\n                return elem && elem.contains(eventTarget) && !elem.isSameNode(eventTarget);\n            });\n            if (isOpen && canOutsideClickClose && !isClickInThisOverlayOrDescendant) {\n                // casting to any because this is a native event\n                safeInvoke(onClose, e);\n            }\n        };\n        _this.handleDocumentFocus = function (e) {\n            if (_this.props.enforceFocus &&\n                _this.containerElement != null &&\n                e.target instanceof Node &&\n                !_this.containerElement.contains(e.target)) {\n                // prevent default focus behavior (sometimes auto-scrolls the page)\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                _this.bringFocusInsideOverlay();\n            }\n        };\n        _this.handleKeyDown = function (e) {\n            var _a = _this.props, canEscapeKeyClose = _a.canEscapeKeyClose, onClose = _a.onClose;\n            if (e.which === Keys.ESCAPE && canEscapeKeyClose) {\n                safeInvoke(onClose, e);\n                // prevent browser-specific escape key behavior (Safari exits fullscreen)\n                e.preventDefault();\n            }\n        };\n        _this.state = { hasEverOpened: props.isOpen };\n        return _this;\n    }\n    Overlay_1 = Overlay;\n    Overlay.getDerivedStateFromProps = function (_a) {\n        var hasEverOpened = _a.isOpen;\n        if (hasEverOpened) {\n            return { hasEverOpened: hasEverOpened };\n        }\n        return null;\n    };\n    Overlay.prototype.render = function () {\n        var _a;\n        // oh snap! no reason to render anything at all if we're being truly lazy\n        if (this.props.lazy && !this.state.hasEverOpened) {\n            return null;\n        }\n        var _b = this.props, children = _b.children, className = _b.className, usePortal = _b.usePortal, isOpen = _b.isOpen;\n        // TransitionGroup types require single array of children; does not support nested arrays.\n        // So we must collapse backdrop and children into one array, and every item must be wrapped in a\n        // Transition element (no ReactText allowed).\n        var childrenWithTransitions = isOpen ? React.Children.map(children, this.maybeRenderChild) : [];\n        childrenWithTransitions.unshift(this.maybeRenderBackdrop());\n        var containerClasses = classNames(Classes.OVERLAY, (_a = {},\n            _a[Classes.OVERLAY_OPEN] = isOpen,\n            _a[Classes.OVERLAY_INLINE] = !usePortal,\n            _a), className);\n        var transitionGroup = (React.createElement(TransitionGroup, { appear: true, className: containerClasses, component: \"div\", onKeyDown: this.handleKeyDown, ref: this.refHandlers.container }, childrenWithTransitions));\n        if (usePortal) {\n            return (React.createElement(Portal, { className: this.props.portalClassName, container: this.props.portalContainer }, transitionGroup));\n        }\n        else {\n            return transitionGroup;\n        }\n    };\n    Overlay.prototype.componentDidMount = function () {\n        if (this.props.isOpen) {\n            this.overlayWillOpen();\n        }\n    };\n    Overlay.prototype.componentDidUpdate = function (prevProps) {\n        if (prevProps.isOpen && !this.props.isOpen) {\n            this.overlayWillClose();\n        }\n        else if (!prevProps.isOpen && this.props.isOpen) {\n            this.overlayWillOpen();\n        }\n    };\n    Overlay.prototype.componentWillUnmount = function () {\n        this.overlayWillClose();\n    };\n    /**\n     * @public for testing\n     * @internal\n     */\n    Overlay.prototype.bringFocusInsideOverlay = function () {\n        var _this = this;\n        // always delay focus manipulation to just before repaint to prevent scroll jumping\n        return requestAnimationFrame(function () {\n            // container ref may be undefined between component mounting and Portal rendering\n            // activeElement may be undefined in some rare cases in IE\n            if (_this.containerElement == null || document.activeElement == null || !_this.props.isOpen) {\n                return;\n            }\n            var isFocusOutsideModal = !_this.containerElement.contains(document.activeElement);\n            if (isFocusOutsideModal) {\n                // element marked autofocus has higher priority than the other clowns\n                var autofocusElement = _this.containerElement.querySelector(\"[autofocus]\");\n                var wrapperElement = _this.containerElement.querySelector(\"[tabindex]\");\n                if (autofocusElement != null) {\n                    autofocusElement.focus();\n                }\n                else if (wrapperElement != null) {\n                    wrapperElement.focus();\n                }\n            }\n        });\n    };\n    Overlay.prototype.maybeRenderBackdrop = function () {\n        var _a = this.props, backdropClassName = _a.backdropClassName, backdropProps = _a.backdropProps, hasBackdrop = _a.hasBackdrop, isOpen = _a.isOpen, transitionDuration = _a.transitionDuration, transitionName = _a.transitionName;\n        if (hasBackdrop && isOpen) {\n            return (React.createElement(CSSTransition, { classNames: transitionName, key: \"__backdrop\", timeout: transitionDuration },\n                React.createElement(\"div\", __assign({}, backdropProps, { className: classNames(Classes.OVERLAY_BACKDROP, backdropClassName, backdropProps.className), onMouseDown: this.handleBackdropMouseDown, tabIndex: this.props.canOutsideClickClose ? 0 : null }))));\n        }\n        else {\n            return null;\n        }\n    };\n    Overlay.prototype.overlayWillClose = function () {\n        document.removeEventListener(\"focus\", this.handleDocumentFocus, /* useCapture */ true);\n        document.removeEventListener(\"mousedown\", this.handleDocumentClick);\n        var openStack = Overlay_1.openStack;\n        var stackIndex = openStack.indexOf(this);\n        if (stackIndex !== -1) {\n            openStack.splice(stackIndex, 1);\n            if (openStack.length > 0) {\n                var lastOpenedOverlay = Overlay_1.getLastOpened();\n                if (lastOpenedOverlay.props.enforceFocus) {\n                    document.addEventListener(\"focus\", lastOpenedOverlay.handleDocumentFocus, /* useCapture */ true);\n                }\n            }\n            if (openStack.filter(function (o) { return o.props.usePortal && o.props.hasBackdrop; }).length === 0) {\n                document.body.classList.remove(Classes.OVERLAY_OPEN);\n            }\n        }\n    };\n    Overlay.prototype.overlayWillOpen = function () {\n        var openStack = Overlay_1.openStack;\n        if (openStack.length > 0) {\n            document.removeEventListener(\"focus\", Overlay_1.getLastOpened().handleDocumentFocus, /* useCapture */ true);\n        }\n        openStack.push(this);\n        if (this.props.autoFocus) {\n            this.bringFocusInsideOverlay();\n        }\n        if (this.props.enforceFocus) {\n            document.addEventListener(\"focus\", this.handleDocumentFocus, /* useCapture */ true);\n        }\n        if (this.props.canOutsideClickClose && !this.props.hasBackdrop) {\n            document.addEventListener(\"mousedown\", this.handleDocumentClick);\n        }\n        if (this.props.hasBackdrop && this.props.usePortal) {\n            // add a class to the body to prevent scrolling of content below the overlay\n            document.body.classList.add(Classes.OVERLAY_OPEN);\n        }\n    };\n    var Overlay_1;\n    Overlay.displayName = DISPLAYNAME_PREFIX + \".Overlay\";\n    Overlay.defaultProps = {\n        autoFocus: true,\n        backdropProps: {},\n        canEscapeKeyClose: true,\n        canOutsideClickClose: true,\n        enforceFocus: true,\n        hasBackdrop: true,\n        isOpen: false,\n        lazy: true,\n        transitionDuration: 300,\n        transitionName: Classes.OVERLAY,\n        usePortal: true,\n    };\n    Overlay.openStack = [];\n    Overlay.getLastOpened = function () { return Overlay_1.openStack[Overlay_1.openStack.length - 1]; };\n    Overlay = Overlay_1 = __decorate([\n        polyfill\n    ], Overlay);\n    return Overlay;\n}(AbstractPureComponent2));\nexport { Overlay };\n//# sourceMappingURL=overlay.js.map"]},"metadata":{},"sourceType":"module"}