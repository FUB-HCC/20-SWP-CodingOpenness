{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Classes, Keys, Utils } from \"../../common\";\nimport { Icon } from \"../icon/icon\";\nimport { Spinner } from \"../spinner/spinner\";\n\nvar AbstractButton =\n/** @class */\nfunction (_super) {\n  __extends(AbstractButton, _super);\n\n  function AbstractButton() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      isActive: false\n    };\n    _this.refHandlers = {\n      button: function (ref) {\n        _this.buttonRef = ref;\n        Utils.safeInvoke(_this.props.elementRef, ref);\n      }\n    };\n    _this.currentKeyDown = null; // we're casting as `any` to get around a somewhat opaque safeInvoke error\n    // that \"Type argument candidate 'KeyboardEvent<T>' is not a valid type\n    // argument because it is not a supertype of candidate\n    // 'KeyboardEvent<HTMLElement>'.\"\n\n    _this.handleKeyDown = function (e) {\n      if (Keys.isKeyboardClick(e.which)) {\n        e.preventDefault();\n\n        if (e.which !== _this.currentKeyDown) {\n          _this.setState({\n            isActive: true\n          });\n        }\n      }\n\n      _this.currentKeyDown = e.which;\n      Utils.safeInvoke(_this.props.onKeyDown, e);\n    };\n\n    _this.handleKeyUp = function (e) {\n      if (Keys.isKeyboardClick(e.which)) {\n        _this.setState({\n          isActive: false\n        });\n\n        _this.buttonRef.click();\n      }\n\n      _this.currentKeyDown = null;\n      Utils.safeInvoke(_this.props.onKeyUp, e);\n    };\n\n    return _this;\n  }\n\n  AbstractButton.prototype.getCommonButtonProps = function () {\n    var _a;\n\n    var _b = this.props,\n        alignText = _b.alignText,\n        fill = _b.fill,\n        large = _b.large,\n        loading = _b.loading,\n        outlined = _b.outlined,\n        minimal = _b.minimal,\n        small = _b.small,\n        tabIndex = _b.tabIndex;\n    var disabled = this.props.disabled || loading;\n    var className = classNames(Classes.BUTTON, (_a = {}, _a[Classes.ACTIVE] = this.state.isActive || this.props.active, _a[Classes.DISABLED] = disabled, _a[Classes.FILL] = fill, _a[Classes.LARGE] = large, _a[Classes.LOADING] = loading, _a[Classes.MINIMAL] = minimal, _a[Classes.OUTLINED] = outlined, _a[Classes.SMALL] = small, _a), Classes.alignmentClass(alignText), Classes.intentClass(this.props.intent), this.props.className);\n    return {\n      className: className,\n      disabled: disabled,\n      onClick: disabled ? undefined : this.props.onClick,\n      onKeyDown: this.handleKeyDown,\n      onKeyUp: this.handleKeyUp,\n      ref: this.refHandlers.button,\n      tabIndex: disabled ? -1 : tabIndex\n    };\n  };\n\n  AbstractButton.prototype.renderChildren = function () {\n    var _a = this.props,\n        children = _a.children,\n        icon = _a.icon,\n        loading = _a.loading,\n        rightIcon = _a.rightIcon,\n        text = _a.text;\n    return [loading && React.createElement(Spinner, {\n      key: \"loading\",\n      className: Classes.BUTTON_SPINNER,\n      size: Icon.SIZE_LARGE\n    }), React.createElement(Icon, {\n      key: \"leftIcon\",\n      icon: icon\n    }), (!Utils.isReactNodeEmpty(text) || !Utils.isReactNodeEmpty(children)) && React.createElement(\"span\", {\n      key: \"text\",\n      className: Classes.BUTTON_TEXT\n    }, text, children), React.createElement(Icon, {\n      key: \"rightIcon\",\n      icon: rightIcon\n    })];\n  };\n\n  return AbstractButton;\n}(AbstractPureComponent2);\n\nexport { AbstractButton };","map":{"version":3,"sources":["../../../../src/components/button/abstractButton.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Classes, Keys, Utils } from \"../../common\";\nimport { Icon } from \"../icon/icon\";\nimport { Spinner } from \"../spinner/spinner\";\nvar AbstractButton = /** @class */ (function (_super) {\n    __extends(AbstractButton, _super);\n    function AbstractButton() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            isActive: false,\n        };\n        _this.refHandlers = {\n            button: function (ref) {\n                _this.buttonRef = ref;\n                Utils.safeInvoke(_this.props.elementRef, ref);\n            },\n        };\n        _this.currentKeyDown = null;\n        // we're casting as `any` to get around a somewhat opaque safeInvoke error\n        // that \"Type argument candidate 'KeyboardEvent<T>' is not a valid type\n        // argument because it is not a supertype of candidate\n        // 'KeyboardEvent<HTMLElement>'.\"\n        _this.handleKeyDown = function (e) {\n            if (Keys.isKeyboardClick(e.which)) {\n                e.preventDefault();\n                if (e.which !== _this.currentKeyDown) {\n                    _this.setState({ isActive: true });\n                }\n            }\n            _this.currentKeyDown = e.which;\n            Utils.safeInvoke(_this.props.onKeyDown, e);\n        };\n        _this.handleKeyUp = function (e) {\n            if (Keys.isKeyboardClick(e.which)) {\n                _this.setState({ isActive: false });\n                _this.buttonRef.click();\n            }\n            _this.currentKeyDown = null;\n            Utils.safeInvoke(_this.props.onKeyUp, e);\n        };\n        return _this;\n    }\n    AbstractButton.prototype.getCommonButtonProps = function () {\n        var _a;\n        var _b = this.props, alignText = _b.alignText, fill = _b.fill, large = _b.large, loading = _b.loading, outlined = _b.outlined, minimal = _b.minimal, small = _b.small, tabIndex = _b.tabIndex;\n        var disabled = this.props.disabled || loading;\n        var className = classNames(Classes.BUTTON, (_a = {},\n            _a[Classes.ACTIVE] = this.state.isActive || this.props.active,\n            _a[Classes.DISABLED] = disabled,\n            _a[Classes.FILL] = fill,\n            _a[Classes.LARGE] = large,\n            _a[Classes.LOADING] = loading,\n            _a[Classes.MINIMAL] = minimal,\n            _a[Classes.OUTLINED] = outlined,\n            _a[Classes.SMALL] = small,\n            _a), Classes.alignmentClass(alignText), Classes.intentClass(this.props.intent), this.props.className);\n        return {\n            className: className,\n            disabled: disabled,\n            onClick: disabled ? undefined : this.props.onClick,\n            onKeyDown: this.handleKeyDown,\n            onKeyUp: this.handleKeyUp,\n            ref: this.refHandlers.button,\n            tabIndex: disabled ? -1 : tabIndex,\n        };\n    };\n    AbstractButton.prototype.renderChildren = function () {\n        var _a = this.props, children = _a.children, icon = _a.icon, loading = _a.loading, rightIcon = _a.rightIcon, text = _a.text;\n        return [\n            loading && React.createElement(Spinner, { key: \"loading\", className: Classes.BUTTON_SPINNER, size: Icon.SIZE_LARGE }),\n            React.createElement(Icon, { key: \"leftIcon\", icon: icon }),\n            (!Utils.isReactNodeEmpty(text) || !Utils.isReactNodeEmpty(children)) && (React.createElement(\"span\", { key: \"text\", className: Classes.BUTTON_TEXT },\n                text,\n                children)),\n            React.createElement(Icon, { key: \"rightIcon\", icon: rightIcon }),\n        ];\n    };\n    return AbstractButton;\n}(AbstractPureComponent2));\nexport { AbstractButton };\n//# sourceMappingURL=abstractButton.js.map"]},"metadata":{},"sourceType":"module"}